// Generated by CoffeeScript 1.12.4
(function() {
  var app, bodyParser, config, cookieParser, express, expressSession, expressValidator, hbs, logger, mongoose, path, routes;

  express = require('express');

  path = require('path');

  logger = require('morgan');

  cookieParser = require('cookie-parser');

  bodyParser = require('body-parser');

  hbs = require('express-handlebars');

  expressValidator = require('express-validator');

  expressSession = require('express-session');

  mongoose = require('mongoose');

  routes = require('./routes/index');

  config = require('./config');

  app = express();

  mongoose.connect(config.database);

  app.engine('hbs', hbs({
    extname: 'hbs',
    defaultLayout: 'layout',
    layoutsDir: __dirname + '/views/layouts/'
  }));

  app.set('views', path.join(__dirname, 'views'));

  app.set('view engine', 'hbs');

  app.use(logger('dev'));

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  app.use(expressValidator());

  app.use(cookieParser());

  app.use(express["static"](path.join(__dirname, 'public')));

  app.use(expressSession({
    secret: 'redX',
    saveUninitialized: false,
    resave: false
  }));

  app.use('/', routes);

  app.use(function(req, res, next) {
    var err;
    err = new Error('Not Found');
    err.status = 404;
    next(err);
  });

  app.use(function(err, req, res, next) {
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};
    res.status(err.status || 500);
    res.render('error');
  });

  module.exports = app;

}).call(this);
